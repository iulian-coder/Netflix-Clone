{"ast":null,"code":"var _jsxFileName = \"/home/iulian/IdeaProjects/NetflixProject/netflix-front/netflix-clone/src/component/MovieDetails.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"../api/axios\";\nimport request from \"../api/request\";\nimport { useForm } from \"react-hook-form\";\nimport ReactPlayer from \"react-player\";\n\nfunction MovieDetails() {\n  const {\n    id\n  } = useParams();\n  const [movie, setMovie] = useState([]);\n  const [recommendation, setRecommendation] = useState([]);\n  const {\n    register,\n    handleSubmit\n  } = useForm();\n  useEffect(() => {\n    async function fetchData() {\n      const requestMovie = await axios.get(request.fetchMovies + `/${id}`);\n      setMovie(requestMovie.data);\n      const requestRecommendation = await axios.get(request.fetchRecommendation + `/${id}`);\n      setRecommendation(requestRecommendation.data);\n      return requestRecommendation;\n    }\n\n    fetchData();\n  }, [id]);\n\n  const onSubmit = data => {\n    const myObj = {\n      comment: data.comment,\n      rating: data.rating,\n      videoId: `${id}`\n    };\n    addRecommendation(myObj);\n    window.location.reload();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, \"Movie\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, \"Id \", movie.id), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, \"Title \", movie.name)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ReactPlayer, {\n    url: movie.url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, \"Recommendation\"), recommendation.map(item => /*#__PURE__*/React.createElement(\"div\", {\n    key: item.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, \"Comment \", item.comment), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, \"Rating \", item.rating)))), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, \"Add new recommendation\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    name: \"comment\",\n    ref: register({\n      required: true,\n      minLength: 3\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"rating\",\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, \"5\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, \"4\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, \"3\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, \"2\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, \"1\")), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"Add\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default MovieDetails;\n\nasync function addRecommendation(params) {\n  await axios.post(request.postRecommendation, params);\n}","map":{"version":3,"sources":["/home/iulian/IdeaProjects/NetflixProject/netflix-front/netflix-clone/src/component/MovieDetails.js"],"names":["React","useState","useEffect","useParams","axios","request","useForm","ReactPlayer","MovieDetails","id","movie","setMovie","recommendation","setRecommendation","register","handleSubmit","fetchData","requestMovie","get","fetchMovies","data","requestRecommendation","fetchRecommendation","onSubmit","myObj","comment","rating","videoId","addRecommendation","window","location","reload","name","url","map","item","required","minLength","params","post","postRecommendation"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"../api/axios\";\nimport request from \"../api/request\";\nimport { useForm } from \"react-hook-form\";\nimport ReactPlayer from \"react-player\";\n\nfunction MovieDetails() {\n  const { id } = useParams();\n  const [movie, setMovie] = useState([]);\n  const [recommendation, setRecommendation] = useState([]);\n  const { register, handleSubmit } = useForm();\n\n  useEffect(() => {\n    async function fetchData() {\n      const requestMovie = await axios.get(request.fetchMovies + `/${id}`);\n      setMovie(requestMovie.data);\n      const requestRecommendation = await axios.get(\n        request.fetchRecommendation + `/${id}`\n      );\n\n      setRecommendation(requestRecommendation.data);\n      return requestRecommendation;\n    }\n\n    fetchData();\n  }, [id]);\n\n  const onSubmit = (data) => {\n    const myObj = {\n      comment: data.comment,\n      rating: data.rating,\n      videoId: `${id}`,\n    };\n    addRecommendation(myObj);\n    window.location.reload();\n  };\n\n  return (\n    <div>\n      <h1>Movie</h1>\n      <ul>\n        <li>Id {movie.id}</li>\n        <li>Title {movie.name}</li>\n      </ul>\n      <div>\n        <ReactPlayer url={movie.url} />\n      </div>\n\n      <h2>Recommendation</h2>\n\n      {recommendation.map((item) => (\n        <div key={item.id}>\n          <ul>\n            <li className=\"\">Comment {item.comment}</li>\n            <li className=\"\">Rating {item.rating}</li>\n          </ul>\n        </div>\n      ))}\n      <h2>Add new recommendation</h2>\n      <div className=\"form\">\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <input\n            name=\"comment\"\n            ref={register({ required: true, minLength: 3 })}\n          />\n          <select name=\"rating\" ref={register}>\n            <option value=\"5\">5</option>\n            <option value=\"4\">4</option>\n            <option value=\"3\">3</option>\n            <option value=\"2\">2</option>\n            <option value=\"1\">1</option>\n          </select>\n          <input type=\"Add\" />\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default MovieDetails;\n\nasync function addRecommendation(params) {\n  await axios.post(request.postRecommendation, params);\n}\n"]},"metadata":{},"sourceType":"module"}